#!/usr/bin/env python  

import roslib
import rospy
import tf
from geometry_msgs.msg import Pose
from wpi_jaco_msgs.srv import QuaternionToEuler

def handle_pose(msg, (fName,pName)):
    q = [msg.orientation.x, msg.orientation.y, msg.orientation.z, msg.orientation.w]
    #q = [0,0,0,1] #glove +
    scaleFactor = 0.5
    br = tf.TransformBroadcaster()
    br.sendTransform((scaleFactor*msg.position.x, -scaleFactor*msg.position.y, scaleFactor*msg.position.z),
        (q[0], q[1], q[2], q[3]),
        rospy.Time.now(),
        fName,
        pName)
        
if __name__ == '__main__':
    topicName = 'HandPose'
    frameName = "hand_disp_frame"
    parentName = "kinect_frame"
    
    rospy.init_node('handBroadcaster', anonymous=True)
    rospy.Subscriber(topicName,Pose,handle_pose,(frameName,parentName), queue_size=10)
    rospy.spin()
